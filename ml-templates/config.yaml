kind: MLApp
metadata:
  name: tensorflow
spec:
  package_manager: "pip2"
  packages:
    - names:
      {{- range $i, $value := .packages }}
      - "{{ $value }}"
      {{- end }}
      manager: "pip2"
  tasks:
  - name: standalone
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.7.0-dev-gpu"
        cpu: "kuberlab/tf-object-detection:1.7.0-dev"
      command: >-
        sed -i -e "s|%DATADIR%|$DATA_DIR|g" faster_rcnn_resnet101_pets.config;
        python -m object_detection/train
        --train_dir $TRAINING_DIR/$BUILD_ID
        --pipeline_config_path faster_rcnn_resnet101_pets.config
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 1
        requests:
          cpu: 100m
          memory: 2Gi
        limits:
          cpu: 2000m
          memory: 16Gi
      default_volume_mapping: true
  - name: eval
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.7.0-dev-gpu"
        cpu: "kuberlab/tf-object-detection:1.7.0-dev"
      command: >-
        BUILD=16;
        sed -i -e "s|%DATADIR%|$DATA_DIR|g" faster_rcnn_resnet101_pets.config;
        python -m object_detection/eval
        --checkpoint_dir=$TRAINING_DIR/$BUILD
        --eval_dir=$TRAINING_DIR/eval/$BUILD
        --pipeline_config_path faster_rcnn_resnet101_pets.config
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 1
        requests:
          cpu: 100m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 8Gi
      default_volume_mapping: true
  - name: export
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.7.0-dev-gpu"
        cpu: "kuberlab/tf-object-detection:1.7.0-dev"
      command: >-
        CHECKPOINT=50000;
        BUILD=16;
        sed -i -e "s|%DATADIR%|$DATA_DIR|g" faster_rcnn_resnet101_pets.config;
        python -m object_detection/export_inference_graph
        --input_type encoded_image_string_tensor
        --pipeline_config_path faster_rcnn_resnet101_pets.config
        --trained_checkpoint_prefix $TRAINING_DIR/$BUILD/model.ckpt-${CHECKPOINT}
        --output_directory /model/$BUILD;
        python -c "from mlboardclient.api import client; m = client.Client(); m.model_upload('object-detection-pets', '1.0.0', '/model/$BUILD/saved_model/1')"
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 4Gi
      default_volume_mapping: true
  - name: workflow
    resources:
    - name: tasks
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.7.0-dev-gpu"
        cpu: "kuberlab/tf-object-detection:1.7.0-dev"
      command: python run_tasks.py
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 1Gi
      default_volume_mapping: true
  uix:
  - name: jupyter
    displayName: Jupyter
    images:
      gpu: "kuberlab/tf-object-detection:1.7.0-dev-gpu"
      cpu: "kuberlab/tf-object-detection:1.7.0-dev"
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: http
    default_volume_mapping: true
  - name: tensorboard
    displayName: Tensorboard
    command: "tensorboard --logdir=$TRAINING_DIR"
    images:
      cpu: "lsheiba/tensorflow-ls-devel"
    ports:
    - port: 6006
      targetPort: 6006
      protocol: TCP
      name: http
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    volumes:
    - name: training
  serving:
  - name: serving
    displayName: Serving
    {{- if .tf_serving }}
    images:
      gpu: "kuberlab/tensorflow-serving:latest-gpu"
      cpu: "kuberlab/tensorflow-serving:latest"
    command: 'tensorflow_model_server --port={{ .serving_port }} --model_name=object-detection --model_base_path=/model'
    {{- else }}
    workdir: "$SRC_DIR"
    command: python hello.py
    {{- end }}
    resources:
      accelerators:
        gpu: 0
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: {{ .serving_port }}
      targetPort: {{ .serving_port }}
      protocol: TCP
      name: grpc
    default_volume_mapping: true
  volumes:
  - isLibDir: false
    mountPath: /notebooks/training
    name: training
    clusterStorage: {{ .storage.value }}
    subPath: training
  - gitRepo:
      repository: https://github.com/kuberlab-catalog/object-detection
    isLibDir: false
    mountPath: /notebooks/src
    name: src
    subPath: object-detection/src
  - isLibDir: true
    mountPath: /notebooks/lib
    name: lib
    clusterStorage: {{ .storage.value }}
    subPath: lib
  - isLibDir: false
    mountPath: /notebooks
    name: code
    subPath: code
    clusterStorage: {{ .storage.value }}
  - isLibDir: false
    mountPath: /notebooks/data
    name: data
    clusterStorage: {{ .storage.value }}
