kind: MLApp
metadata:
  name: tensorflow
spec:
  package_manager: "pip3"
  tasks:
  - name: train
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.9.0-gpu"
        cpu: "kuberlab/tf-object-detection:1.9.0"
      command: >-
        python run.py
        --worker
        --research_dir $RESEARCH_DIR
        --data_dir $DATA_DIR
        --training_dir $TRAINING_DIR
        --build_id $BUILD_ID
        --num_classes 37
        --model_name pets
        --model_version 1.0.0
        --num_steps 1000
        --resize_min_dimension 600
        --resize_max_dimension 1024
        --resize_fixed_width 25
        --resize_fixed_height 25
        --grid_scales 0.25 0.5 1 2
        --grid_aspect_ratios 0.5 1 2
        --tf_record_train_path $DATA_DIR/pet_train_with_masks.record
        --tf_record_test_path $DATA_DIR/pet_val_with_masks.record
        --label_map_path $DATA_DIR/pet_label_map.pbtxt
        --use_pretrained_checkpoint false
        --pretrained_checkpoint_path $PRETRAINED_DIR/model.ckpt
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 1
        requests:
          cpu: 100m
          memory: 2Gi
        limits:
          cpu: 2000m
          memory: 16Gi
      default_volume_mapping: true
      env:
      - name: PYTHONPATH
        value: /notebooks/research
  - name: export
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.9.0-gpu"
        cpu: "kuberlab/tf-object-detection:1.9.0"
      command: >-
        python export.py
        --research_dir $RESEARCH_DIR
        --data_dir $DATA_DIR
        --training_dir $TRAINING_DIR
        --train_build_id 1
        --train_checkpoint 1000
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 4Gi
      default_volume_mapping: true
      env:
      - name: PYTHONPATH
        value: /notebooks/research
  - name: distributed
    resources:
    - name: worker
      replicas: 2
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      images:
        gpu: "kuberlab/tf-object-detection:1.9.0-gpu"
        cpu: "kuberlab/tf-object-detection:1.9.0"
      command: >-
        TF_CONFIG=$(tf_conf worker --chief_name master) python train.py
        --research_dir $RESEARCH_DIR
        --data_dir $DATA_DIR
        --training_dir $TRAINING_DIR
        --build_id $BUILD_ID
      workdir: "$SRC_DIR"
      port: 2222
      resources:
        accelerators:
          gpu: 1
        requests:
          cpu: 100m
          memory: 4Gi
        limits:
          cpu: 2
          memory: 32Gi
      default_volume_mapping: true
      env:
      - name: PYTHONPATH
        value: /notebooks/research
    - name: ps
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      is_permanent: true
      images:
        gpu: "kuberlab/tf-object-detection:1.9.0-gpu"
        cpu: "kuberlab/tf-object-detection:1.9.0"
      command: >-
        TF_CONFIG=$(tf_conf ps --chief_name master) python train.py
        --research_dir $RESEARCH_DIR
        --data_dir $DATA_DIR
        --training_dir $TRAINING_DIR
        --build_id $BUILD_ID
      workdir: "$SRC_DIR"
      port: 2222
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 1
          memory: 1Gi
      default_volume_mapping: true
      env:
      - name: PYTHONPATH
        value: /notebooks/research
  uix:
  - name: jupyter
    displayName: Jupyter
    images:
      gpu: "kuberlab/tf-object-detection:1.9.0-gpu"
      cpu: "kuberlab/tf-object-detection:1.9.0"
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: http
    default_volume_mapping: true
    env:
    - name: PYTHONPATH
      value: /notebooks/research
  - name: tensorboard
    displayName: Tensorboard
    command: "tensorboard --logdir=$TRAINING_DIR"
    images:
      gpu: "kuberlab/tensorflow:gpu-36-1.9.0-full"
      cpu: "kuberlab/tensorflow:cpu-36-1.9.0-full"
    ports:
    - port: 6006
      targetPort: 6006
      protocol: TCP
      name: http
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    volumes:
    - name: training
  serving:
  - name: serving
    displayName: Serving
    images:
      gpu: "kuberlab/serving:latest-gpu"
      cpu: "kuberlab/serving:latest"
    command: 'kuberlab-serving --port={{ .serving_port }} --model-path=/model'
    workdir: "$SRC_DIR"
    resources:
      accelerators:
        gpu: 0
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: {{ .serving_port }}
      targetPort: {{ .serving_port }}
      protocol: TCP
      name: grpc
    default_volume_mapping: true
    spec:
      outMimeType: text/plain
      rawInput: true
      model: any
      params:
        - name: inputs
          type: bytes
      response:
        - name: detection_boxes
          type: double
          shape:
          - 1
          - -1
          - 4
          description: detected boxes
        - name: detection_classes
          type: int
          shape:
          - 1
          - -1
          description: classes for detected boxes
        - name: detection_scores
          type: double
          shape:
          - 1
          - -1
          description: scores for detected boxes
        - name: num_detections
          type: int
          shape:
          - 1
          description: detections quantity
  volumes:
  - mountPath: /notebooks/training
    name: training
    clusterStorage: {{ .storage.value }}
  - gitRepo:
      repository: https://github.com/kuberlab-catalog/object-detection
    mountPath: /notebooks/src
    name: src
    subPath: object-detection/src
  - isLibDir: true
    mountPath: /notebooks/lib
    name: lib
    clusterStorage: {{ .storage.value }}
  - mountPath: /notebooks
    name: code
    clusterStorage: {{ .storage.value }}
  - mountPath: /notebooks/data
    name: data
    {{- if .dataset.value }}
    datasetFS:
      dataset: {{ .dataset.value }}
      workspace: {{ .dataset.workspace }}
      version: {{ .dataset.version }}
    {{- else }}
    clusterStorage: {{ .storage.value }}
    {{- end }}
  - mountPath: /notebooks/pretrained
    name: pretrained
    {{- if .pretrained.value }}
    model:
      model: {{ .pretrained.value }}
      workspace: {{ .pretrained.workspace }}
      version: {{ .pretrained.version }}
    {{- else }}
    clusterStorage: {{ .storage.value }}
    {{- end }}
  - mountPath: /notebooks/research
    name: research
    {{- if .code.value }}
    model:
      model: {{ .code.value }}
      workspace: {{ .code.workspace }}
      version: {{ .code.version }}
    {{- else }}
    clusterStorage: {{ .storage.value }}
    {{- end }}
